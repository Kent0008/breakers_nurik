#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ DRILL
–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ MQTT –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç API
"""

import json
import time
import requests
import paho.mqtt.publish as publish
from datetime import datetime, timezone

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
MQTT_BROKER = "localhost"
MQTT_PORT = 1883
API_BASE = "http://localhost:8000/api"

def send_mqtt_data(topic, value):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ MQTT"""
    payload = {
        "value": value,
        "timestamp": datetime.now(timezone.utc).isoformat()
    }
    
    try:
        publish.single(
            topic,
            json.dumps(payload),
            hostname=MQTT_BROKER,
            port=MQTT_PORT
        )
        print(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ {topic}: {payload}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ {topic}: {e}")
        return False

def test_api_endpoint(endpoint, method="GET", data=None):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint"""
    url = f"{API_BASE}{endpoint}"
    
    try:
        if method == "GET":
            response = requests.get(url)
        elif method == "POST":
            response = requests.post(url, json=data, headers={"Content-Type": "application/json"})
        else:
            print(f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –º–µ—Ç–æ–¥: {method}")
            return False
            
        if response.status_code in [200, 201]:
            print(f"‚úÖ {method} {endpoint}: {response.status_code}")
            if response.content:
                print(f"   –û—Ç–≤–µ—Ç: {response.json()}")
            return True
        else:
            print(f"‚ùå {method} {endpoint}: {response.status_code}")
            print(f"   –û—à–∏–±–∫–∞: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ {method} {endpoint}: {e}")
        return False

def main():
    print("üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ DRILL")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
    print("\n1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API...")
    if not test_api_endpoint("/thresholds/"):
        print("‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ backend –∑–∞–ø—É—â–µ–Ω.")
        return
    
    # –¢–µ—Å—Ç 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Å—Ç–∞–≤–æ–∫
    print("\n2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É—Å—Ç–∞–≤–æ–∫...")
    thresholds = [
        {"tag": "pressure_1", "min_value": 10.0, "max_value": 25.0},
        {"tag": "temperature_1", "min_value": 20.0, "max_value": 80.0},
        {"tag": "flow_rate_1", "min_value": 5.0, "max_value": 15.0}
    ]
    
    for threshold in thresholds:
        test_api_endpoint("/thresholds/", "POST", threshold)
    
    # –¢–µ—Å—Ç 3: –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö MQTT
    print("\n3. –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö MQTT...")
    
    # –ù–æ—Ä–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    send_mqtt_data("telemetry/pressure_1", 15.5)
    send_mqtt_data("telemetry/temperature_1", 45.2)
    send_mqtt_data("telemetry/flow_rate_1", 8.7)
    
    time.sleep(2)
    
    # –ó–Ω–∞—á–µ–Ω–∏—è, –Ω–∞—Ä—É—à–∞—é—â–∏–µ —É—Å—Ç–∞–≤–∫–∏
    send_mqtt_data("telemetry/pressure_1", 30.0)  # –ü—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º—É–º
    send_mqtt_data("telemetry/temperature_1", 15.0)  # –ù–∏–∂–µ –º–∏–Ω–∏–º—É–º–∞
    send_mqtt_data("telemetry/flow_rate_1", 20.0)  # –ü—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º—É–º
    
    time.sleep(2)
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API
    print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API...")
    test_api_endpoint("/data/tags/")
    test_api_endpoint("/data/?tag=pressure_1&range=1h")
    test_api_endpoint("/incidents/")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–≤–æ–∫
    print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–≤–æ–∫...")
    test_api_endpoint("/thresholds/")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\nüìä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ—Ç–∫—Ä–æ–π—Ç–µ:")
    print("   - Frontend: http://localhost:3000")
    print("   - API: http://localhost:8000/api/")

if __name__ == "__main__":
    main() 